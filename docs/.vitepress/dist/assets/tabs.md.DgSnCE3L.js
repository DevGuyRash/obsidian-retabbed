import{_ as t}from"./chunks/tabs-2.CB9YyKVy.js";import{_ as e}from"./chunks/tabs-4.Dtjr_bTg.js";import{_ as a,c as s,o,a5 as i}from"./chunks/framework.D-ihIdkc.js";const T=JSON.parse('{"title":"Obsidian Tabs","description":"","frontmatter":{},"headers":[],"relativePath":"tabs.md","filePath":"tabs.md"}'),n={name:"tabs.md"},r=i('<h1 id="obsidian-tabs" tabindex="-1">Obsidian Tabs <a class="header-anchor" href="#obsidian-tabs" aria-label="Permalink to &quot;Obsidian Tabs&quot;">â€‹</a></h1><p>Thanks to the <a href="https://github.com/lazyloong/obsidian-code-tab" target="_blank" rel="noreferrer">Code Tab</a> plugin for the inspiration, but since it had not been updated for a long time and it wasn&#39;t support edit content directly, I refactored the plugin and added a lot of features.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><strong>Please refrain from entering tasks directly within the Tabs code block.</strong></p><p>The Tabs function operates based on the code block. In Obsidian, text within a code block is treated as plain text. Consequently, if you input tasks inside a code block, neither the tasks plugin nor the dataview plugin will be able to recognize them.</p></div><p><img src="'+t+'" alt="tabs-2"></p><p><img src="'+e+'" alt="tabs-4"></p>',5),d=[r];function c(l,p,b,_,h,m){return o(),s("div",null,d)}const k=a(n,[["render",c]]);export{T as __pageData,k as default};
